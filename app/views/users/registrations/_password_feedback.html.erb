<div id="password_feedback" class="mt-4 bg-gray-800 p-2 space-y-2">
  <%
    valid_icon = '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
      <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>'

    invalid_icon = '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
      <path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>'

    errors = user.errors.messages_for(:password) || []
    validations = [
      {
        valid: errors.exclude?(User::LENGTH_MESSAGE),
        text: User::LENGTH_MESSAGE
      },
      {
        valid: errors.exclude?(User::LOWERCASE_MESSAGE),
        text: User::LOWERCASE_MESSAGE
      },
      {
        valid: errors.exclude?(User::UPPERCASE_MESSAGE),
        text: User::UPPERCASE_MESSAGE
      },
      {
        valid: errors.exclude?(User::NUMBER_MESSAGE),
        text: User::NUMBER_MESSAGE
      },
      {
        valid: errors.exclude?(User::SYMBOL_MESSAGE),
        text: User::SYMBOL_MESSAGE
      },
      {
        valid: errors.exclude?(User::IDENTICAL_MESSAGE),
        text: User::IDENTICAL_MESSAGE
      },
      {
        valid: errors.exclude?(User::SEQUENTIAL_MESSAGE),
        text: User::SEQUENTIAL_MESSAGE
      }
    ]
    
  %>

  <% validations.each do |validation| %>
    <p class="flex space-x-2 <%= validation[:valid] ? 'text-green-600' : 'text-red-600'%>">
      <%= raw(validation[:valid] ? valid_icon : invalid_icon) %>
      <span><%= validation[:text] %></span>
    </p>
  <% end %>
</div>